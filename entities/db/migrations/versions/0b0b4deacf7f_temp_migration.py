"""temp_migration

Revision ID: 0b0b4deacf7f
Revises: 56c83322b8de
Create Date: 2025-05-20 09:16:14.467923

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "0b0b4deacf7f"
down_revision: Union[str, None] = "56c83322b8de"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "history",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("car_id", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("action", sa.String(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("car_inventory_id", sa.Integer(), nullable=True),
        sa.Column("comment", sa.String(), nullable=True),
        sa.ForeignKeyConstraint(["car_id"], ["cars.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["car_inventory_id"], ["cars.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_history_id"), "history", ["id"], unique=False)
    op.drop_index("ix_inventory_history_id", table_name="inventory_history")
    op.drop_table("inventory_history")
    op.drop_index("ix_bidding_hub_history_id", table_name="bidding_hub_history")
    op.drop_table("bidding_hub_history")
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "bidding_hub_history",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("car_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("action", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("comment", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(["car_id"], ["cars.id"], name="bidding_hub_history_car_id_fkey", ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="bidding_hub_history_user_id_fkey", ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id", name="bidding_hub_history_pkey"),
    )
    op.create_index("ix_bidding_hub_history_id", "bidding_hub_history", ["id"], unique=False)
    op.create_table(
        "inventory_history",
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("car_inventory_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("created_at", postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
        sa.Column("action", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("comment", sa.VARCHAR(), autoincrement=False, nullable=True),
        sa.ForeignKeyConstraint(
            ["car_inventory_id"],
            ["car_inventory.id"],
            name="inventory_history_car_inventory_id_fkey",
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], name="inventory_history_user_id_fkey", ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id", name="inventory_history_pkey"),
    )
    op.create_index("ix_inventory_history_id", "inventory_history", ["id"], unique=False)
    op.drop_index(op.f("ix_history_id"), table_name="history")
    op.drop_table("history")
    # ### end Alembic commands ###
